plugins {
    id 'org.springframework.boot' version "3.4.0-SNAPSHOT"
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation "org.apache.cxf:cxf-spring-boot-starter-jaxws:${cxfVersion}"
    implementation "org.apache.cxf:cxf-rt-features-logging:${cxfVersion}"

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"

    implementation "se.riv.clinicalprocess.healthcond.certificate:clinicalprocess-healthcond-certificate-schemas:${rivtaClinicalprocessSchemasVersion}"

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    systemProperty("application.dir", "${rootProject.projectDir}/devops/dev")
    systemProperty("spring.profiles.active", "dev")
    systemProperty("spring.config.additional-location", "file:${applicationDir}/config/")
}

tasks.register("appRunDebug") {
    println("######## Running in Debug mode ########")
    doFirst {
        bootRun.configure {
            jvmArgs = [
                    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=18889",
            ]
        }
    }
    finalizedBy("bootRun")
}

tasks.register("appRun") {
    println("######## Running in normal mode ########")
    finalizedBy("bootRun")
}